<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.coding.helpers</groupId>
        <artifactId>helper-archetype</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>helper-archetype-server</artifactId>

    <name>helper-archetype-server</name>
    <description>Demo project for Spring Boot</description>


    <dependencies>
        <!-- 引入三方包 beg -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--为了节省虚拟机资源，一般情况下不开启 CONFIG 服务-->
        <!--<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-client</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
        </dependency>
        <!--<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
        </dependency>-->
        <!--spring-cloud-starter-bus-amqp 包含 spring-cloud-starter-stream-rabbit-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-rabbit</artifactId>
        </dependency>
        <!--spring-cloud-starter-stream-rabbit 包含 spring-cloud-stream-binder-rabbit
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-binder-rabbit</artifactId>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-test-support</artifactId>
            <scope>test</scope>
        </dependency>
        <!--log4jdbc 是在 jdbc 层的一个日志框架，可以将占位符与参数全部合并在一起显示-->
        <dependency>
            <groupId>com.googlecode.log4jdbc</groupId>
            <artifactId>log4jdbc</artifactId>
        </dependency>
        <!-- 引入三方包 end -->

        <!-- 引入二方包 beg -->
        <dependency>
            <groupId>com.coding.helpers.plugin</groupId>
            <artifactId>plugin-gray-deploy</artifactId>
        </dependency>
        <dependency>
            <groupId>com.coding.helpers.tool</groupId>
            <artifactId>tool-cmp-generator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.coding.helpers.tool</groupId>
            <artifactId>tool-cmp-idempotent</artifactId>
        </dependency>
        <dependency>
            <groupId>com.coding.helpers.tool</groupId>
            <artifactId>tool-cmp-common</artifactId>
        </dependency>
        <!-- 引入二方包 end -->

        <!-- 引入一方包 beg -->
        <dependency>
            <groupId>com.coding.helpers</groupId>
            <artifactId>helper-archetype-common</artifactId>
        </dependency>
        <!-- 引入一方包 end -->
    </dependencies>

    <build>
        <finalName>helper-archetype-provider</finalName>
        <!--默认情况下，Maven属性只有在POM中才会被解析。资源过滤就是让maven属性在如下指定的资源文件也能被解析。-->
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
