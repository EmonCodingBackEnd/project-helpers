env: none

server:
  port: 8080
  tomcat:
    # 处理MultipartFile在Linux系统下找不到目录 /tmp/tomcat.<一串数字>.<port>/work/Tomcat/localhost/<项目名称>
    basedir: /home/emon/saas/@project.parent.artifactId@/@project.build.finalName@/tmp

eureka:
  client:
    # 启用健康检查应该放到application.yml配置，而不应该是bootstrap.yml，否则可能出现 UNKNOWN 的注册状态
    healthcheck:
      enabled: true

spring:
  datasource:
#    MySQL5.7的驱动类
#    driver-class-name: com.mysql.jdbc.Driver
    driver-class-name: net.sf.log4jdbc.DriverSpy
#    MySQL8.0的驱动类
#    driver-class-name: com.mysql.cj.jdbc.Driver
    username: springboot
    password: SpringBoot@123
#    url: jdbc:mysql://${dynamic.host}/selldb?characterEncoding=utf-8&useSSL=false
    url: jdbc:log4jdbc:mysql://${dynamic.host}/selldb?characterEncoding=utf-8&useSSL=false
    # 是否使用schema.sql建库和data.sql初始化数据，默认true
    initialization-mode: never
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
#      解决MySQL8.0下错误:Access to DialectResolutionInfo cannot be null when 'hibernate.dialect' not set
#      database-platform: org.hibernate.dialect.MySQLDialect
  jackson:
    default-property-inclusion: non_null
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB
  # 禁用，否则对GenericKeyedFTPClientPool报错MXBean already registered with name org.apache.commons.pool2:type=GenericKeyedObjectPool,name=pool
  jmx:
    enabled: false

  rabbitmq:
    host: ${dynamic.host}
    port: 5672
    username: guest
    password: guest
    virtual-host: /

  # common spring boot settings
  cache:
    type: redis
    cache-names: redisCache
  redis:
    database: 1
    host: ${dynamic.host}
    port: 6379
    password: redis123
    timeout: 0
#    sentinel:
#      master: mymaster
#      nodes: ${dynamic.host}:26379,${dynamic.host}:26378,${dynamic.host}:26377

  cloud:
    stream:
#      这个binders的配置，目前来看不是必需的
#      binders:
#        rabbit_cluster:
#          type: rabbit
#          environment:
#            spring:
#              rabbitmq:
#                host: ${dynamic.host}
#                port: 5672
#                username: guest
#                password: guest
#                virtual-host: /
      bindings:
        output_channel:
          destination: stream-exchange
          group: stream-queue
          content-type: application/json
        output_channel2:
          destination: stream-exchange2
          group: stream-queue2
          content-type: application/json
#          binder: rabbit_cluster
        input_channel:
          destination: stream-exchange
          group: stream-queue
          content-type: application/json
#          binder: rabbit_cluster
        input_channel2:
          destination: stream-exchange2
          group: stream-queue2
          content-type: application/json
#          binder: rabbit_cluster

helper:
  plugin-gray-deploy:
    request:
      rule:
        data: 1#20190219
        transfer-mode: override_first
  tool-cmp-idempotent:
    nonidempotent:
      redis-key: helper:tool:cmp:client:nonidempotent

logging:
  config: classpath:logback-spring-${spring.profiles.active}.xml
